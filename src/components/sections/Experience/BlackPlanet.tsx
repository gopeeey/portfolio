/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGSAP } from "@gsap/react";
import { useGLTF } from "@react-three/drei";
import gsap from "gsap";
import { useEffect, useRef } from "react";
import * as THREE from "three";

export function BlackPlanet() {
  const { nodes, materials } = useGLTF("/black_planet.glb");
  const groupRef = useRef<THREE.Group<THREE.Object3DEventMap> | null>(null);
  const meshRef = useRef<THREE.Mesh<
    THREE.BufferGeometry<THREE.NormalBufferAttributes>,
    THREE.Material | THREE.Material[],
    THREE.Object3DEventMap
  > | null>(null);

  useGSAP(() => {
    if (!groupRef.current) return;

    gsap.to(groupRef.current.position, {
      x: 1.5,
      y: 0,
      scrollTrigger: {
        trigger: "#experience",
        start: "top top",
        end: "+=350",
        scrub: 1,
        pin: "#experience-scene",
      },
    });
  });

  useEffect(() => {
    const animate = (t: number) => {
      if (!meshRef.current) return;

      const val = t * 0.0005;
      meshRef.current.rotation.z = val;

      requestAnimationFrame(animate);
    };

    animate(0);
  });
  return (
    <group
      dispose={null}
      rotation={[0, 0, Math.PI / 9]}
      position={[-2.5, 2.5, 0]}
      scale={1.3}
      ref={groupRef}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.Sphere007_Material002_0001 as THREE.Mesh).geometry}
        material={materials["Material.002"]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.793}
        ref={meshRef}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={(nodes.Sphere007_Material001_0002 as THREE.Mesh).geometry}
          material={materials["Material.001"]}
          scale={1.036}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Sphere008_Material002_0001 as THREE.Mesh).geometry}
            material={materials["Material.002"]}
            scale={1.034}
          />
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={(nodes.Sphere007_Material001_0003 as THREE.Mesh).geometry}
          material={materials["Material.001"]}
          scale={1.036}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("/black_planet.glb");
