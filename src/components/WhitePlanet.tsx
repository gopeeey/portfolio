/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { Euler, Vector3 } from "@react-three/fiber";
import * as THREE from "three";

type Props = {
  position?: Vector3;
  scale?: number;
  rotation?: Euler;
};

export function WhitePlanet({ position, scale, rotation }: Props) {
  const { nodes, materials } = useGLTF("/models/white_planet.glb");
  return (
    <group position={position} scale={scale} rotation={rotation} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.Sphere006_Material002_0 as THREE.Mesh).geometry}
        material={materials["Material.002"]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={(nodes.Sphere005_Material001_0 as THREE.Mesh).geometry}
          material={materials["Material.001"]}
          rotation={[1.458, 0, 0]}
          scale={1.034}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("/models/white_planet.glb");
